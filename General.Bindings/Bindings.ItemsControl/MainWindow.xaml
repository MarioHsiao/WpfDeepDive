<Window x:Class="Bindings.ItemsControl.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:Bindings.ItemsControl"
        Title="MainWindow" Height="350" Width="525">
    <Window.Resources>
        <local:ForwardingValueConverter x:Key="forwardingConverter"/>
        <local:PrependingValueConverter x:Key="prependingConverter"/>
    </Window.Resources>
    <ScrollViewer>
        <StackPanel>
            <GroupBox Header="Simple Observable Collection">
                <StackPanel>
                    <ListBox ItemsSource="{Binding Path=ObservableSource}" />
                    <!-- you will be notified of changes in the collection -->
                    <Button Click="AddToObservableSource">Add to ObservableSource</Button>
                    <Button Click="RemoveFromObservableSource">Remove from ObservableSource</Button>
                    <Button Click="ChangeInObservableSource">Change in ObservableSource</Button>
                    <!-- The converter is applied to the collection and NOT to the items in the collection -->
                    <ListBox ItemsSource="{Binding Path=ObservableSource, Converter={StaticResource forwardingConverter}}" />
                    <!-- If you want to provide a custom Converter, you'll need to implement an ItemTemplate -->
                    <ListBox ItemsSource="{Binding Path=ObservableSource}" >
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Converter={StaticResource prependingConverter}}"/>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                    <ListBox ItemsSource="{Binding Path=ObservableSource}" ItemStringFormat="Formatted - {0}" />
                </StackPanel>
            </GroupBox>
            <GroupBox Header="Simple List Collection">
                <StackPanel>
                    <ListBox ItemsSource="{Binding Path=ListSource}"/>
                    <!-- you will NOT be notified of changes in the list, after all
                        there is no notification mechanism -->
                    <Button Click="AddToListSource">Add to ListSource</Button>
                    <Button Click="RemoveFromListSource">Remove from ListSource</Button>
                    <Button Click="ChangeInListSource">Change in ListSource</Button>
                </StackPanel>
            </GroupBox>
            <GroupBox Header="Complex Observable Collection">
                <StackPanel>
                    <ListBox ItemsSource="{Binding Path=ComplexObservableSource}" DisplayMemberPath="MuteProperty" />
                    <ListBox ItemsSource="{Binding Path=ComplexObservableSource}" DisplayMemberPath="NotifyingProperty" />
                    <!--<ListBox ItemsSource="{Binding Path=ComplexObservableSource}" DisplayMemberPath="NotifyingProperty" />-->
                    <ListBox ItemsSource="{Binding Path=ComplexObservableSource}" DisplayMemberPath="NotifyingProperty" ItemStringFormat="Formatted - {0}" />
                    <!-- you will be notified of changes in the collection -->
                    <Button Click="AddToComplexObservableSource">Add to ComplexObservableSource</Button>
                    <Button Click="RemoveFromComplexObservableSource">Remove from ComplexObservableSource</Button>
                    <Button Click="ChangeItemInComplexObservableSource">Change item in ComplexObservableSource</Button>
                    <Button Click="ChangeMuteInComplexObservableSource">Change Mute in ComplexObservableSource</Button>
                    <Button Click="ChangeNotifyingInComplexObservableSource">Change Notifying in ComplexObservableSource</Button>
                    <!-- ItemStringFormat does not give you access to properties -->
                    <ListBox ItemsSource="{Binding Path=ComplexObservableSource}" ItemStringFormat="Formatted - {MuteProperty}" />
                </StackPanel>
            </GroupBox>
            <GroupBox Header="Simple Observable Collection: What is Synchronization">
                <StackPanel>
                    <!-- we are not simply binding to the ObservableCollection but instead
                        we are binding to a view on the ObservableCollection -->
                    <Label Content="Listbox with No Sync" />
                    <ListBox Name="ListSyncNoSyncing" ItemsSource="{Binding Path=ComplexObservableSource}" DisplayMemberPath="NotifyingProperty" />
                    <Button Click="GetSelectedItemNoSync">Show Selected Item on Not Synced</Button>
                    <Button Click="GetCurrentItemNoSync">Show Current Item on Not Synced</Button>
                    <Label Content="Listbox with Sync" />
                    <ListBox Name="ListSyncWtSyncing" ItemsSource="{Binding Path=ComplexObservableSource}" DisplayMemberPath="NotifyingProperty" IsSynchronizedWithCurrentItem="True" />
                    <Button Click="GetSelectedItemWtSync">Show Selected Item with Syncing</Button>
                    <Button Click="GetCurrentItemWtSync">Show Current Item with Syncing</Button>
                    <ListBox Name="ListSyncWtSyncing2" ItemsSource="{Binding Path=ComplexObservableSource}" DisplayMemberPath="NotifyingProperty" IsSynchronizedWithCurrentItem="True" />
                </StackPanel>
            </GroupBox>
            <GroupBox Header="Simple Observable Collection: Synchronization">
                <StackPanel>
                    <!-- we are not simply binding to the ObservableCollection but instead
                        we are binding to a view on the ObservableCollection -->
                    <ListBox ItemsSource="{Binding Path=ComplexObservableSource}" DisplayMemberPath="MuteProperty" IsSynchronizedWithCurrentItem="True" />
                    <ListBox ItemsSource="{Binding Path=ComplexObservableSource}" DisplayMemberPath="NotifyingProperty" IsSynchronizedWithCurrentItem="True" />
                </StackPanel>
            </GroupBox>
            <GroupBox Header="Simple List Collection: Synchronization">
                <StackPanel>
                    <!-- The above is not caused by the use of ObservableCollection
                        it also works with a simple List -->
                    <ListBox ItemsSource="{Binding Path=ComplexListSource}" DisplayMemberPath="MuteProperty" IsSynchronizedWithCurrentItem="True" />
                    <ListBox ItemsSource="{Binding Path=ComplexListSource}" DisplayMemberPath="NotifyingProperty" IsSynchronizedWithCurrentItem="True" />
                </StackPanel>
            </GroupBox>
            <GroupBox Header="Simple Observable Collection: Synchronization and SelectedItem">
                <StackPanel>
                    <!-- The synchronization is maintained -->
                    <ListBox ItemsSource="{Binding Path=ComplexObservableSource}" SelectedItem="{Binding Path=SelectedInObservable}" DisplayMemberPath="MuteProperty" IsSynchronizedWithCurrentItem="True" />
                    <ListBox ItemsSource="{Binding Path=ComplexObservableSource}" DisplayMemberPath="NotifyingProperty" IsSynchronizedWithCurrentItem="True" />
                    <Button Content="Set Selected to third item in collection" Click="SetSelectedInObservable" />
                </StackPanel>
            </GroupBox>
            <GroupBox Header="Simple Observable Collection: Synchronization and SelectedValue">
                <StackPanel>
                    <!--  -->
                    <ListBox ItemsSource="{Binding Path=ComplexObservableSource}" SelectedValue="{Binding SelectedValueInObservable}" SelectedValuePath="NotifyingProperty" DisplayMemberPath="MuteProperty" IsSynchronizedWithCurrentItem="True" />
                    <ListBox ItemsSource="{Binding Path=ComplexObservableSource}" DisplayMemberPath="NotifyingProperty" IsSynchronizedWithCurrentItem="True" />
                    <!-- we are only setting the value of the porperty, but the selection is updated to the complete object 
                        and as above, the synchronization is maintained-->
                    <Button Content="Set Selected to a property of third item in collection" Click="SetSelectedValueInObservable" />
                </StackPanel>
            </GroupBox>
        </StackPanel>
    </ScrollViewer>
</Window>
